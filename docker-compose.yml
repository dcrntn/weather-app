version: "3.8"

services:
  weather_fetcher:
    build: ./weather_fetcher
    ports:
      - "8000:8000"
    networks:
      - my_network
    depends_on:
      - postgres

  analytics_processor:
    build: ./analytics_processor
    ports:
      - "8001:8000"
    depends_on:
      - weather_fetcher
    networks:
      - my_network
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/weather_db

  frontend_api:
    build: ./frontend_api
    ports:
      - "8002:8000"
    depends_on:
      - analytics_processor
    networks:
      - my_network

  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    depends_on:
      - frontend_api
    networks:
      - my_network

  nginx:
    image: docker.io/library/nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - frontend
    networks:
      - my_network

  postgres:
    image: docker.io/library/postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: weather_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - my_network

volumes:
  pgdata:

networks:
  my_network:
    driver: bridge
